
chunk             ::= stmt* EOF

stmt              ::= if_stmt
                    | echo_stmt
                    | expr_stmt

if_stmt           ::= "if" expr block if_stmt_cont

block             ::= "{" stmt* "}"

if_stmt_cont      ::= ( "else" ( if_stmt | block ) )?

echo_stmt         ::= "echo" expr ";"

expr_stmt         ::= expr ";"

expr              ::= and_expr or_expr_cont

or_expr_cont      ::= ( "||" and_expr or_expr_cont )?

and_expr          ::= eq_expr and_expr_cont

and_expr_cont     ::= ( "&&" eq_expr and_expr_cont )?

eq_expr           ::= cmp_expr ( ( "==" | "!=" ) cmp_expr )*

cmp_expr          ::= add_expr ( ( ">=" | ">" | "<=" | "<" ) add_expr )*

add_expr          ::= mul_expr ( ( "+" | "-" ) mul_expr )*

mul_expr          ::= unary_expr ( ( "*" | "/" | "%" ) unary_expr )*

unary_expr        ::= ( "!" | "-" )? unary_expr | prim_expr

prim_expr         ::= "nil" | "false" | "true" | NUMBER 
                    | if_expr
                    | group

if_expr           ::= "if" expr block_expr if_expr_cont

block_expr        ::= "{" expr "}"

if_expr_cont      ::= ( "else" ( if_expr | block_expr ) )?

group             ::= "(" expr ")"
