
- test: destruct simple
  source: |
    let [x, y] = [1, 2, 3];
    println(x);
    println(y);
  out: |
    1
    2

- test: destruct complex
  source: |
    let [x, y, z] = [1, 2];
    println(z);
    let [_, a] = [1, 2, 3];
    println(a);
  out: |
    nil
    2

- test: destruct record
  source: |
    let {y, z} = {x: 1, y: 2, z: 3};
    println(y);
    println(z);
  out: |
    2
    3

- test: destruct record (with value retain)
  source: |
    let {y, z} = {x: 1, y: 2, z: "asdf"};
    println(y);
    println(z);
  out: |
    2
    asdf

- test: destruct record (error)
  source: |
    let {y, name} = {x: 1, y: 2, z: 3};
  out:
    regex: "record has no field named"
  exit_code: 1

- test: destruct record (error) (2)
  source: |
    let {name, y} = {x: 1, y: 2, z: 3};
  out:
    regex: "record has no field named"
  exit_code: 1

- test: destruct record (error) (3)
  source: |
    let {z, name, y} = {x: 1, y: 2, z: 3};
  out:
    regex: "record has no field named"
  exit_code: 1

- test: destruct record (error) (4)
  source: |
    let {z, name, y} = [ 1, 2, 3, 4];
  out:
    regex: "cannot unpack fields from value of type"
  exit_code: 1
